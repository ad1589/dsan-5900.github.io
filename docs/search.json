[
  {
    "objectID": "index.html#geographic",
    "href": "index.html#geographic",
    "title": "Intern Insight",
    "section": "Geographic",
    "text": "Geographic\nTo provide an overview of the data, we will be looking at the data from a geographic perspective, specifically at the state level.\n\nFeatures by State\n\n\nCode\ncustom_palette = ['#00072D', '#0A2472', '#0E6BA8', '#A6E1FA', '#99ABC5', '#8B748F', '#6F0624']\n\n#calculate averages of all numeric columns\nnum_cols = df[['State', 'GPA', 'WorkExp', 'TestScore', 'WritingScore', 'VolunteerLevel']]\navg_df = num_cols.groupby('State').mean().reset_index()\nstate_abbr = {\n    'Alabama': 'AL',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Mississippi': 'MS',\n    'New York': 'NY',\n    'Oregon': 'OR',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virginia': 'VA'\n\n}\navg_df['State_Abbr'] = avg_df['State'].map(state_abbr)\navg_df = avg_df.drop(columns=['State'])\navg_df = avg_df.rename(columns={'State_Abbr': 'State'})\n\npio.renderers.default = \"plotly_mimetype+notebook\"\n\nfig = px.choropleth(avg_df, locationmode=\"USA-states\", \n                    locations=avg_df['State'], \n                    scope=\"usa\",\n                    color=avg_df['GPA'],\n                    hover_data={\"State\": True, \"GPA\": True},  \n                    labels={\"GPA\": \"Selected Variable\"},\n                    color_continuous_scale=custom_palette\n                )\n\ndropdown = []\nfor col in avg_df.columns[:-1]:\n    dropdown.append({'label': col, 'method': 'update', 'args': [{'z': [avg_df[col]]}]})\n\nfig.update_layout(updatemenus=[{'buttons': dropdown, 'direction': 'down', 'showactive': True}],\n                  title='Choropleth Map of Average Selected Variable')\nfig.update_coloraxes(colorbar_title=dict(text='Selected Variable'))\n\nfig.show()\n\n\n\n                                                \n\n\nAbove is a choropleth map of the average numeric feature (GPA, test score, writing score, work experience in years, and volunteer level) by state. The average of the numeric features is calculated across all decision types to obtain a holistic view of the student data by state. Below we will summarize some findings for each feature:\n\n\n\n\n\n\n\n\nGPA\nTest Score\nWriting Score\n\n\n\n\nCalifornia has the highest average GPA, with Florida and New York close behind.\nCalifornia has the highest average test score.\nCalifornia has the highest average writing score.\n\n\nOregon and Mississippi have the lowest average GPA.\nMississippi has the lowest average test score.\nNew York has the lowest average writing score.\n\n\nWork Experience\nVolunteer Level\n\n\n\nMississippi has the highest average work experience in years.\nOregon has the highest average volunteer level.\n\n\n\nOregon has the lowest average work experience.\nAlabama has the lowest average volunteer level.\n\n\n\n\nWe can also look at some of these features at the geographic level by decision.\n\n\nCode\nadmit = df[df['Decision'] == 'Admit']\nnum_cols = admit[['State', 'GPA', 'WorkExp', 'TestScore', 'WritingScore', 'VolunteerLevel']]\navg_admit = num_cols.groupby('State').mean().reset_index()\navg_admit['State_Abbr'] = avg_admit['State'].map(state_abbr)\n\ndecline = df[df['Decision'] == 'Decline']\nnum_cols = decline[['State', 'GPA', 'WorkExp', 'TestScore', 'WritingScore', 'VolunteerLevel']]\navg_decline = num_cols.groupby('State').mean().reset_index()\navg_decline['State_Abbr'] = avg_decline['State'].map(state_abbr)\n\n\n\n\nCode\nimport altair as alt\nfrom vega_datasets import data\n\nstate_id_dict = dict(zip(data.population_engineers_hurricanes()[\"state\"], data.population_engineers_hurricanes()[\"id\"]))\navg_admit[\"StateID\"] = avg_admit[\"State\"].map(state_id_dict)\navg_decline[\"StateID\"] = avg_decline[\"State\"].map(state_id_dict)\n\nstates = alt.topo_feature('https://raw.githubusercontent.com/vega/vega-datasets/master/data/us-10m.json', 'states')\nclick = alt.selection_multi(fields = [\"State\"])\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"GPA:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"GPA:Q\"],\n    opacity = alt.condition('isValid(datum.GPA)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n).properties(width = 333, height = 200, title=\"Average Admitted GPA by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.GPA)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\nadmit_gpa = existing_states + missing_states\nadmit_gpa = admit_gpa.encode(\n    tooltip= [\"State:N\", \"GPA:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n    ).interactive()\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"GPA:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"GPA:Q\"],\n    opacity = alt.condition('isValid(datum.GPA)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n).properties(width = 333, height = 200, title=\"Average Declined GPA by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.GPA)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\ndecline_gpa = existing_states + missing_states\ndecline_gpa = decline_gpa.encode(\n    tooltip= [\"State:N\", \"GPA:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n    ).interactive()\n\nadmit_gpa | decline_gpa\n\n\n\n\n\n\n\n\n\n\nCode\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"TestScore:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"TestScore:Q\"],\n    opacity = alt.condition('isValid(datum.TestScore)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n).properties(width = 333, height = 200, title=\"Average Admitted Test Score by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.TestScore)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\nadmit_test = existing_states + missing_states\nadmit_test = admit_test.encode(\n    tooltip= [\"State:N\", \"TestScore:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n    ).interactive()\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"TestScore:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"TestScore:Q\"],\n    opacity = alt.condition('isValid(datum.TestScore)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n).properties(width = 333, height = 200, title=\"Average Declined Test Score by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.TestScore)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\ndecline_test = existing_states + missing_states\ndecline_test = decline_test.encode(\n    tooltip= [\"State:N\", \"TestScore:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n    ).interactive()\n\nadmit_test | decline_test\n\n\n\n\n\n\n\n\nAs we can see from the average GPA and test scores for admitted and declined students by state, students who were admitted had higher GPAs and test scores than those who were declined.\nThis insight can help us to improve studentsâ€™ test scores so as to increase their chances of being admitted to an internship.\n\n\nDecision Rates by State\nWe can also see the rates of students admitted and declined from internships by state to see overall how successful are the students from the selected states.\n\n\nCode\n#create dataframe of rates for each state by decision\ndecision_state = df.groupby(['Decision', 'State'])[[\"GPA\"]].count().reset_index()\ndecision_state = decision_state.rename(columns={'GPA':'StateCount'})\ndecision_state['DecisionCount'] = decision_state.groupby('Decision')['StateCount'].transform('sum')\ndecision_state['Rate'] = decision_state['StateCount'] / decision_state['DecisionCount'] * 100\n\nstate_id_dict = dict(zip(data.population_engineers_hurricanes()[\"state\"], data.population_engineers_hurricanes()[\"id\"]))\ndecision_state[\"StateID\"] = decision_state[\"State\"].map(state_id_dict)\n\nadmit_states = decision_state[decision_state['Decision'] == \"Admit\"]\ndecline_states = decision_state[decision_state['Decision'] == \"Decline\"]\n\n\n\n\nCode\nstates = alt.topo_feature('https://raw.githubusercontent.com/vega/vega-datasets/master/data/us-10m.json', 'states')\nclick = alt.selection_multi(fields = [\"State\"])\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"Rate:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"Rate:Q\"],\n    opacity = alt.condition('isValid(datum.Rate)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(admit_states, \"StateID\", list(admit_states.columns))\n).properties(width = 333, height = 200, title=\"Admission Rates by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.Rate)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\nadmit_map = existing_states + missing_states\nadmit_map = admit_map.encode(\n    tooltip= [\"State:N\", \"Rate:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(admit_states, \"StateID\", list(admit_states.columns))\n    ).interactive()\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"Rate:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"Rate:Q\"],\n    opacity = alt.condition('isValid(datum.Rate)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(decline_states, \"StateID\", list(decline_states.columns))\n).properties(width = 333, height = 200, title=\"Rejection Rates by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.Rate)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\ndecline_map = existing_states + missing_states\ndecline_map = decline_map.encode(\n    tooltip= [\"State:N\", \"Rate:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(decline_states, \"StateID\", list(decline_states.columns))\n    ).interactive()\n\nadmit_map | decline_map\n\n\n\n\n\n\n\n\nAbove are the maps of the rates of the students admitted by state and the rates of the students declined by state. Some findings from the maps are:\n\nFlorida had the highest rate of admitted students.\nUtah had the lowest rate of admitted students.\nFlorida also has the highest rate of rejected students.\nCalifornia, Oregon, and Mississippi all have the lowest rate of rejected students.\n\nThere isnâ€™t a clear relationship between admissions and rejections by state, which means that the state a student is from is not pivotal in the decision of their internship application."
  },
  {
    "objectID": "index.html#gender",
    "href": "index.html#gender",
    "title": "Intern Insight",
    "section": "Gender",
    "text": "Gender"
  },
  {
    "objectID": "index.html#xgboost-and-shapley",
    "href": "index.html#xgboost-and-shapley",
    "title": "Intern Insight",
    "section": "XGBoost and Shapley",
    "text": "XGBoost and Shapley"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Intern Insight",
    "section": "",
    "text": "The goal:\n\nInteract with the data for an enhanced user experience.\nProvide effective insights into the internship activity of Data Tech College students each year.\nFoster data-driven action to help advance the careers of the students."
  },
  {
    "objectID": "index.html#demographic-insights",
    "href": "index.html#demographic-insights",
    "title": "Intern Insight",
    "section": "Demographic Insights",
    "text": "Demographic Insights\nThe following section breaks down the relationship between demographics (gender & state) and internship application decisions.\n\nGeographics\nTo provide an overview of the data, we will be looking at the data from a geographic perspective, specifically at the state level.\nBelow is an interactive map of students per state and outcome of internship applications. Note that for most states and decisions there are only a handful of students that were admitted, waitlisted, and declined. To see the breakdown of outcome by state, hover over the desired state.\n\n\nCode\nimport plotly.express as px\nimport pandas as pd\n\ncustom_palette = ['#00072D', '#0A2472', '#0E6BA8', '#A6E1FA', '#99ABC5', '#8B748F', '#6F0624']\ndf_copy = df.copy()\nstate_abbreviations = {\n    'California': 'CA',\n    'Florida': 'FL',\n    'Colorado': 'CO',\n    'Utah': 'UT',\n    'Oregon': 'OR',\n    'Virginia': 'VA',\n    'Mississippi': 'MS',\n    'New York': 'NY',\n    'Alabama': 'AL',\n    'Vermont': 'VT'\n}\ndf_copy['State'] = df_copy['State'].map(state_abbreviations)\n\n\nstate_decision_counts = df_copy.groupby(['State', 'Decision']).size().reset_index(name='Counts')\nstate_decision_counts['Decision_Counts'] = state_decision_counts['Decision'] + \" : \" + state_decision_counts['Counts'].astype(str)\n\nhover_data = state_decision_counts.pivot(index='State', columns='Decision', values='Decision_Counts').reset_index()\nhover_data['hover_text'] = hover_data.apply(lambda row: ', '.join(row.dropna()[1:]), axis=1)\n\ntotal_applications = df_copy.groupby('State').size().reset_index(name='Total Applications')\nfinal_data = total_applications.merge(hover_data[['State', 'hover_text']], on='State', how='left')\n\npio.renderers.default = \"plotly_mimetype+notebook\"\n\nfig = px.choropleth(final_data,\n                    locations='State', \n                    locationmode=\"USA-states\", \n                    color='Total Applications',\n                    color_continuous_scale=custom_palette,\n                    scope=\"usa\",\n                    title=\"Total Internship Applications by State & Outcome\",\n                    hover_name='State',\n                    hover_data={'State': False, 'Total Applications': True, 'hover_text': True},\n                    labels={'hover_text': 'Decisions'}\n                   )\n\nfig.show()\n\n\n\n                                                \n\n\nFlorida has the most internship applications, followed by Colorado and California. In California, 66% of the students who applied to internships were admitted, and in Colorado about 50% of students were admitted. However, in Florida, where most students applied to, only about 30% were admitted. This indicates that there is a big interest in Data Tech College students to intern in Florida but are not successful in getting admitted.\nOne recommendation to Data Tech College would be to conduct more research about the industries that students are interested in for internships, and thus create more courses to support those interests. If 66% of students who apply to internships in California get admitted, it could indicate that the courses currently offered at Data Tech College align with the knowledge expected at industries that are predominant in California, such as climate change data science. However, if students are not getting admitted to internships in Florida, where biotech is a sought-after industry for example, more courses that reflect the interest of students could be created to better prepare students for their desired internships.\n\nFeatures by State\n\n\nCode\nfrom plotly.subplots import make_subplots\n\ncustom_palette = ['#00072D', '#0A2472', '#0E6BA8', '#A6E1FA', '#99ABC5', '#8B748F', '#6F0624']\n\n#calculate averages of all numeric columns\nnum_cols = df[['State', 'GPA', 'WorkExp', 'TestScore', 'WritingScore', 'VolunteerLevel']]\navg_df = num_cols.groupby('State').mean().reset_index()\nstate_abbr = {\n    'Alabama': 'AL',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Mississippi': 'MS',\n    'New York': 'NY',\n    'Oregon': 'OR',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virginia': 'VA'}\n    \navg_df['State_Abbr'] = avg_df['State'].map(state_abbr)\navg_df = avg_df.drop(columns=['State'])\navg_df = avg_df.rename(columns={'State_Abbr': 'State'})\n\npio.renderers.default = \"plotly_mimetype+notebook\"\n\navg_df.columns = [\"GPA\", \"Work Experience\", \"Test Score\", \"Writing Score\", \"Volunteer Level\", \"State\"]\n\nfig = make_subplots(rows = 1, cols = 1)\n\nvisible_traces = [True] + [False] * (len(avg_df.columns) - 1)\n\nfor i, col in enumerate(avg_df.columns[0:5]):\n    trace = go.Choropleth(\n        locations = avg_df[\"State\"],\n        z = avg_df[col],\n        locationmode = \"USA-states\",\n        hoverinfo = \"location+z\",\n        colorscale = custom_palette,\n        colorbar = dict(title=col),\n        visible = visible_traces[i]\n    )\n    fig.add_trace(trace)\n\nfig.update_geos(projection_type = \"albers usa\", visible = True, resolution = 50)\n\n# Add dropdown \nbuttons = []\nfor i, col in enumerate(avg_df.columns[0:5]):\n    button = {\"label\": col, \"method\": \"update\", \"args\": [{\"visible\": [False] * i + [True] + [False] * (len(avg_df.columns) - i - 1)}, {\"z\": [avg_df[col]]}]}\n    buttons.append(button)\n\nfig.update_layout(\n    updatemenus=[{\"buttons\": buttons, \"direction\": \"down\", \"showactive\": True}],\n    title_text = \"Average of Selected Variable by State\"\n)\n\nfig.show()\n\n\n\n                                                \n\n\nAbove is a choropleth map of the average numeric feature (GPA, test score, writing score, work experience in years, and volunteer level) by state. The average of the numeric features is calculated across all decision types to obtain a holistic view of the student data by state. Below we will summarize some findings for each feature:\n\n\n\n\n\n\n\n\nGPA\nTest Score\nWriting Score\n\n\n\n\nCalifornia has the highest average GPA, with Florida and New York close behind.\nCalifornia has the highest average test score.\nCalifornia has the highest average writing score.\n\n\nOregon and Mississippi have the lowest average GPA.\nMississippi has the lowest average test score.\nNew York has the lowest average writing score.\n\n\nWork Experience\nVolunteer Level\n\n\n\nMississippi has the highest average work experience in years.\nOregon has the highest average volunteer level.\n\n\n\nOregon has the lowest average work experience.\nAlabama has the lowest average volunteer level.\n\n\n\n\nCalifornia has the highest avaerage academic features, specifically GPA, test score, and writing score. This indicates that for internships in California, Data Tech College students are adequately academically prepared.\nWe can also look at some of these features at the geographic level by decision.\n\n\nCode\nadmit = df[df['Decision'] == 'Admit']\nnum_cols = admit[['State', 'GPA', 'WorkExp', 'TestScore', 'WritingScore', 'VolunteerLevel']]\navg_admit = num_cols.groupby('State').mean().reset_index()\navg_admit['State_Abbr'] = avg_admit['State'].map(state_abbr)\n\ndecline = df[df['Decision'] == 'Decline']\nnum_cols = decline[['State', 'GPA', 'WorkExp', 'TestScore', 'WritingScore', 'VolunteerLevel']]\navg_decline = num_cols.groupby('State').mean().reset_index()\navg_decline['State_Abbr'] = avg_decline['State'].map(state_abbr)\n\nimport altair as alt\nfrom vega_datasets import data\n\nstate_id_dict = dict(zip(data.population_engineers_hurricanes()[\"state\"], data.population_engineers_hurricanes()[\"id\"]))\navg_admit[\"StateID\"] = avg_admit[\"State\"].map(state_id_dict)\navg_decline[\"StateID\"] = avg_decline[\"State\"].map(state_id_dict)\n\nstates = alt.topo_feature('https://raw.githubusercontent.com/vega/vega-datasets/master/data/us-10m.json', 'states')\nclick = alt.selection_multi(fields = [\"State\"])\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"GPA:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"GPA:Q\"],\n    opacity = alt.condition('isValid(datum.GPA)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n).properties(width = 333, height = 200, title=\"Average Admitted GPA by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.GPA)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\nadmit_gpa = existing_states + missing_states\nadmit_gpa = admit_gpa.encode(\n    tooltip= [\"State:N\", \"GPA:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n    ).interactive()\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"GPA:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"GPA:Q\"],\n    opacity = alt.condition('isValid(datum.GPA)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n).properties(width = 333, height = 200, title=\"Average Declined GPA by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.GPA)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\ndecline_gpa = existing_states + missing_states\ndecline_gpa = decline_gpa.encode(\n    tooltip= [\"State:N\", \"GPA:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n    ).interactive()\n\nadmit_gpa | decline_gpa\n\n\n\n\n\n\n\n\n\n\nCode\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"TestScore:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"TestScore:Q\"],\n    opacity = alt.condition('isValid(datum.TestScore)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n).properties(width = 333, height = 200, title=\"Average Admitted Test Score by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.TestScore)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\nadmit_test = existing_states + missing_states\nadmit_test = admit_test.encode(\n    tooltip= [\"State:N\", \"TestScore:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_admit, \"StateID\", list(avg_admit.columns))\n    ).interactive()\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"TestScore:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"TestScore:Q\"],\n    opacity = alt.condition('isValid(datum.TestScore)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n).properties(width = 333, height = 200, title=\"Average Declined Test Score by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.TestScore)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\ndecline_test = existing_states + missing_states\ndecline_test = decline_test.encode(\n    tooltip= [\"State:N\", \"TestScore:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(avg_decline, \"StateID\", list(avg_decline.columns))\n    ).interactive()\n\nadmit_test | decline_test\n\n\n\n\n\n\n\n\nAs we can see from the average GPA and test scores for admitted and declined students by state, students who were admitted had higher GPAs and test scores than those who were declined.\nOne notable example for both GPA and test score is Florida. About 30% of students who applied to internships in Florida were admitted, and those students averaged to having high GPAs and high test scores. But of those students who were declined, they had a high average GPA of 3.5, which is considered a good GPA. Students who applied to Florida internships but were declined also had the highest average test score of those declined.\nThe finding from Florida confirms the need to expand research into studentsâ€™ desired industries and provide courses to support industry knowledge. Floridaâ€™s example also shows how test score could play a more important role in admitted outcomes than GPA.\nThis insight can help Data Tech College to improve studentsâ€™ test scores so as to increase their chances of being admitted to an internship.\n\n\nDecision Rates by State\nWe can also see the rates of students admitted and declined from internships by state to see overall how successful are the students from the selected states.\n\n\nCode\n#create dataframe of rates for each state by decision\ndecision_state = df.groupby(['Decision', 'State'])[[\"GPA\"]].count().reset_index()\ndecision_state = decision_state.rename(columns={'GPA':'StateCount'})\ndecision_state['DecisionCount'] = decision_state.groupby('Decision')['StateCount'].transform('sum')\ndecision_state['Rate'] = decision_state['StateCount'] / decision_state['DecisionCount'] * 100\n\nstate_id_dict = dict(zip(data.population_engineers_hurricanes()[\"state\"], data.population_engineers_hurricanes()[\"id\"]))\ndecision_state[\"StateID\"] = decision_state[\"State\"].map(state_id_dict)\n\nadmit_states = decision_state[decision_state['Decision'] == \"Admit\"]\ndecline_states = decision_state[decision_state['Decision'] == \"Decline\"]\n\n\n\n\nCode\nstates = alt.topo_feature('https://raw.githubusercontent.com/vega/vega-datasets/master/data/us-10m.json', 'states')\nclick = alt.selection_multi(fields = [\"State\"])\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"Rate:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"Rate:Q\"],\n    opacity = alt.condition('isValid(datum.Rate)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(admit_states, \"StateID\", list(admit_states.columns))\n).properties(width = 333, height = 200, title=\"Admission Rates by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.Rate)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\nadmit_map = existing_states + missing_states\nadmit_map = admit_map.encode(\n    tooltip= [\"State:N\", \"Rate:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(admit_states, \"StateID\", list(admit_states.columns))\n    ).interactive()\n\nexisting_states = alt.Chart(states).mark_geoshape(stroke='black').encode(\n    color = alt.Color(\"Rate:Q\", scale=alt.Scale(range=custom_palette)),\n    tooltip = [\"State:N\", \"Rate:Q\"],\n    opacity = alt.condition('isValid(datum.Rate)', alt.value(1), alt.value(0.2)),\n).transform_lookup(\n    lookup = \"id\",\n    from_ = alt.LookupData(decline_states, \"StateID\", list(decline_states.columns))\n).properties(width = 333, height = 200, title=\"Rejection Rates by State\").add_selection(click).project(type = \"albersUsa\").interactive()\n\nmissing_states = (\n    alt.Chart(states)\n    .mark_geoshape(fill = \"grey\", stroke = \"white\")\n    .encode(opacity=alt.condition(\"isValid(datum.Rate)\", alt.value(0), alt.value(0.2))).add_selection(click).project(type = \"albersUsa\")\n    )\n\ndecline_map = existing_states + missing_states\ndecline_map = decline_map.encode(\n    tooltip= [\"State:N\", \"Rate:Q\"]\n    ).transform_lookup(\n        lookup=\"id\",\n        from_=alt.LookupData(decline_states, \"StateID\", list(decline_states.columns))\n    ).interactive()\n\nadmit_map | decline_map\n\n\n\n\n\n\n\n\nAbove are the maps of the rates of the students admitted by state and the rates of the students declined by state. Some findings from the maps are:\n\nFlorida had the highest rate of admitted students.\nUtah had the lowest rate of admitted students.\nFlorida also has the highest rate of rejected students.\nCalifornia, Oregon, and Mississippi all have the lowest rate of rejected students.\n\nThere is no clear relationship between admissions and rejections by state. Data Tech College, however, should try to expand the domains covered in the curriculum to incorporate various industries that have hubs across the country.\n\n\n\nGender\nIt is important to establish that internship opportunities are given fairly and equitably to all students regardless of gender. Analyzing decisions by gender can highlight any discrepancies or biases in the selection process, which is the primary focus of the following section.\n\nThe heatmap above display internship decision counts among females and males. Because the colors represent counts in very similar ranges, it appears gender is not a contribuing factor to internship decisions. However, itâ€™s important to back that statement with statistics, such as a Chi-Square test. Due to the relatively small size of the data set, a chi-square test may not always be accurate. An exact test was also performed, Fisherâ€™s Exact Test, to verify the result from the Chi-Square test.\n\n\nCode\nfrom scipy.stats import chi2_contingency\n\ncont_table = pd.crosstab(df[\"Gender\"], df[\"Decision\"])\nchi2_stat, p_value_chi2, _, _ = chi2_contingency(cont_table)\n\n\n\n\n\nStatistic - Chi-Square Test\nValue\n\n\n\n\nChi-Square Statistic\n0.0234\n\n\nChi-Square P-value\n0.9883\n\n\n\nThe Chi-Square statistic measures the difference between gender frequencies in each decision category within the data and gender frequencies in each decision that would be expected if there was no association between the variables. A lower chi-square value as seen above, indicates that the observed frequencies are very close to the expected frequencies. The large P-value (greater than 0.05) confirms that there is no significant association between gender and admission decisions, indicating no evidence of bias based on this test; a desired result.\n\n\nCode\nfrom scipy.stats import fisher_exact\ncont_table_small = cont_table[[\"Admit\", \"Decline\"]]\nodds_ratio, p_value_fish = fisher_exact(cont_table_small)\n\n\n\n\n\nStatistic - Fisherâ€™s Exact Test\nValue\n\n\n\n\nFisherâ€™s Odds Ratio\n1.0833\n\n\nFisherâ€™s Test P-Value\n1.0\n\n\n\nFor Fisherâ€™s Exact Test, the odds ratio is the ratio of the odds of an event occurring in one group compared to another. There is a positive association if the odds ratio is greater than 1. The odds ratio of 1.083 means that the odds of being admitted for one group are 8.3% higher than the odds of the other group being admitted. While Fisherâ€™s Exact found a difference, the p-value for the test is equal to 1, which is higher than above any given significance level. This verifies the results of the Chi-Square test, indicating no evidence of bias between admisisons and gender."
  },
  {
    "objectID": "index.html#machine-learning",
    "href": "index.html#machine-learning",
    "title": "Intern Insight",
    "section": "Machine Learning",
    "text": "Machine Learning\nBefore applying machine learning, below we will explain the reasoning behind applying ML to the student admissions data. We wanted to identify relationships between the academic features in the data on the decision, namely GPA, writing score, and test score. The motivation behind this is to use the information of the relationships, if any are present, to help students in our university understand what features of their application might contribute to the decision. We then hope to provide targeted help to our students based on our findings to increase the number of students admitted to internships.\n\n\nCode\n%%html\n<img src=\"../website/images/decision_pairplot.png\">\n\n\n\n\n\nAbove is the pairplot of GPA, writing score, and test score of the students grouped by the decision. When looking at the scatterplots, we notice some patterns:\n\nStudents with low test score, no matter the GPA, were declined.\nStudents with high test score and high GPA were accepted.\nStudents with a pretty high GPA but average test score were waitlisted.\nStudents with high test score, no matter the writing score, were admitted.\nStudents with a low test score, no matter the writing score, were declined.\nStudents with high writing scores but average test score were waitlisted.\n\nThrough the pairplot we can see that some of the academic features have relationships by decision result, but some features seem to be more important than others. We will investigate the importance of all features on decision using XGBoost and Shapley values.\n\nXGBoost and Shapley\nTo understand the factors that may have played a role in determining college student internship decisions, a tree-based machine learning model, XGBoost, was trained and tested. By analyzing the results of the model using statistical game theory elements called Shapley values, we can also detetermine how strongly each factor influenced internship decisions. Understanding such relationships will highlight opportunities for improvement in the college curriculum to ensure all of the students have the highest probability of being accepted for a summer internship.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.</figcaption>\n</figure>\n\n\n\n    \n    Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.\n\n\n\nThe figure above quantifies studentâ€™s academic and wholistic attributes influence on internship application outcomes overall. Higher SHAP values mean those features have a greater impact internship decisions. Conversely, lower SHAP values indicate factors that are less important in the internship decision making process.\nAs we can see, test scores, GPA, and writing scores are among the top contributors while features such as work experience and volunteer level are not weighed as heaviliy. This highlights that companies are looking to the studentâ€™s academic background as a main focus for their decision compared to their wholistic attributes.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/spec_shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.</figcaption>\n</figure>\n\n\n\n    \n    Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.\n\n\n\nWhile the previous plot displayed how student attributes play a role in the internship decision making process overall, Shapley statistics allow further steps to be taken by analyzing how each feature contributes to each possible deicion (Admit, Waitlist, Decline).\nThe figure above displays just that. It appears that the test score is the most significant factor contributing to a studentâ€™s likelihood of being admitted. It falls in line with the earlier pairplot as we saw significant overlap in internship decisions among GPAs and writing scores, but distinct separation for test scores. This suggests that students with higher test scores have a greater advantage in the competitive internship landscape.\nFor students who are placed on a waitlist, both test scores and GPA are important considerations. This might indicate that students on the waitlist have comparatively lower test scores than those who are admitted outright. The pairplot displays exactly that so it seems that for these students, academic performance is a deciding factor that could tip the balance in their favor for internship admission.\nOn the other hand, for students who are declined, the test score still holds considerable weight, but the writing score becomes notably more influential. This pattern could imply that declined students, while possibly having adequate test scores, may fall short in demonstrating the necessary writing proficiency, which is critical for many internships that require strong communication skills."
  },
  {
    "objectID": "index.html#conclusions",
    "href": "index.html#conclusions",
    "title": "Intern Insight",
    "section": "Conclusions",
    "text": "Conclusions\nThese insights suggest a couple of strategic focuses for the institution:\n\nTest Score Improvement: Continue to prioritize and enhance test preparation services, ensuring that the students can achieve the highest scores possible.\nAcademic Support: Given the importance of GPA, particularly for waitlisted students, bolstering academic support can help these students improve their standing and increase their chances of moving from waitlist to admit.\nWriting Proficiency: Addressing the writing skills that impact both waitlisted and declined students, consider expanding the writing centers and integrating more communication-focused workshops into the student services.\nIndustry Research/Course Creation: Conduct research of what industries students are applying to for internships to have better insight into what their interests are. Courses more tailored to the needs of Data Tech College students should then be created to increase the rate of admissions at internships across the country.\n\nBy concentrating on these areas, the college will help its students to not only meet but exceed the expectations of internship programs, thereby improving their chances of being admitted."
  },
  {
    "objectID": "index.html#at-a-glance---summer-2023",
    "href": "index.html#at-a-glance---summer-2023",
    "title": "Intern Insight",
    "section": "At A Glance - Summer 2023",
    "text": "At A Glance - Summer 2023\n\n\n\nCode\n# Import packages\nimport pandas as pd\nimport numpy as np\nimport altair as alt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.io as pio\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom vega_datasets import data\n\n# Read in clean data\ndf = pd.read_csv(\"../data/clean_data.csv\")\n\n# Get mean and median dfs\nmeans = df[[\"Decision\", \"GPA\", \"WorkExp\", \"TestScore\", \"WritingScore\", \"VolunteerLevel\"]].groupby(\"Decision\").agg([\"mean\"]).reset_index()\nmeans.columns = means.columns.droplevel(1)\nmeans.columns = [\"Decision\", \"GPA\", \"Work Experience\", \"Test Score\", \"Writing Score\", \"Volunteer Level\"]\nmedians = df[[\"Decision\", \"GPA\", \"WorkExp\", \"TestScore\", \"WritingScore\", \"VolunteerLevel\"]].groupby(\"Decision\").agg([\"median\"]).reset_index()\nmedians.columns = medians.columns.droplevel(1)\nmedians.columns = [\"Decision\", \"GPA\", \"Work Experience\", \"Test Score\", \"Writing Score\", \"Volunteer Level\"]\n\n# Plotly visual\nvariables = [\"GPA\", \"Test Score\", \"Writing Score\", \"Work Experience\", \"Volunteer Level\"]\norder = [\"Admit\", \"Waitlist\", \"Decline\"]\n\npio.renderers.default = \"plotly_mimetype+notebook\"\n\n# Add traces\nplot = go.Figure(data=[\n    go.Bar( \n        name = \"GPA\", \n        x = means[\"Decision\"], \n        y = means[\"GPA\"],\n        marker_color = \"#0E6BA8\"\n    ), \n    go.Bar( \n        name = \"Test Score\", \n        x = means[\"Decision\"], \n        y = means[\"Test Score\"],\n        marker_color = \"#6F0624\",\n        visible = False \n    ), \n    go.Bar( \n        name = \"Writing Score\", \n        x = means[\"Decision\"], \n        y = means[\"Writing Score\"],\n        marker_color = \"#8B748F\",\n        visible = False  \n    ), \n    go.Bar( \n        name = \"Work Experience\", \n        x = means[\"Decision\"], \n        y = means[\"Work Experience\"],\n        marker_color = \"#00072D\",\n        visible = False \n    ), \n    go.Bar( \n        name = \"Volunteer Level\", \n        x = means[\"Decision\"], \n        y = means[\"Volunteer Level\"],\n        marker_color = \"#0A2472\",\n        visible = False\n    ) \n]) \n\n# Set the initial view to JUST be GPA\ninitial_view = {\"visible\": [True, False, False, False, False]}\n\n# List of titles to use\ntitles = [\"Mean GPA\", \"Mean Test Score\", \"Mean Writing Score\", \"Mean Years of Work Experience\", \"Mean Volunteer Level\"]\n\n# Dropdown\nplot.update_layout( \n    updatemenus=[ \n        dict( \n            active = 0, \n            x = -0.1, \n            y = 0.7,\n            buttons=list([ \n                dict(label = variable, \n                     method = \"update\", \n                     args=[{\"visible\": [i == j for i in range(len(variables))]}, \n                           {\"title\": f\"{titles[j]} by Admissions Decision\",  \n                            \"xaxis_title\": \"Admissions Decision\", \n                            \"yaxis_title\": titles[j], \n                            \"xaxis\": {\"categoryorder\": \"array\", \"categoryarray\": order}\n                            }]) for j, variable in enumerate(variables)\n            ]), \n        ) \n    ], \n    title_text = f\"{titles[0]} by Admissions Decision\",\n    xaxis = dict(categoryorder=\"array\", categoryarray=order),\n    showlegend = True,\n    margin = dict(l = 50, r = 50, t = 50, b = 50)\n) \n\nplot.show()\n\n\n\n                                                \n\n\n\nMedian Trends by Metric\nBelow is an interactive bar plot displaying the median of each numerical metric (GPA, Test Score, etc.) by internship admissions decision. To switch between metrics, click on the drop down and select your metric of choice.\n\n\nCode\npio.renderers.default = \"plotly_mimetype+notebook\"\n\n# Add traces\nplot = go.Figure(data=[\n    go.Bar( \n        name = \"GPA\", \n        x = medians[\"Decision\"], \n        y = medians[\"GPA\"],\n        marker_color = \"#0E6BA8\"\n    ), \n    go.Bar( \n        name = \"Test Score\", \n        x = medians[\"Decision\"], \n        y = medians[\"Test Score\"],\n        marker_color = \"#6F0624\",\n        visible = False \n    ), \n    go.Bar( \n        name = \"Writing Score\", \n        x = medians[\"Decision\"], \n        y = medians[\"Writing Score\"],\n        marker_color = \"#8B748F\",\n        visible = False  \n    ), \n    go.Bar( \n        name = \"Work Experience\", \n        x = medians[\"Decision\"], \n        y = medians[\"Work Experience\"],\n        marker_color = \"#00072D\",\n        visible = False \n    ), \n    go.Bar( \n        name = \"Volunteer Level\", \n        x = medians[\"Decision\"], \n        y = medians[\"Volunteer Level\"],\n        marker_color = \"#0A2472\",\n        visible = False\n    ) \n]) \n\n# Set the initial view to JUST be GPA\ninitial_view = {\"visible\": [True, False, False, False, False]}\n\n# List of titles to use\ntitles = [\"Median GPA\", \"Median Test Score\", \"Median Writing Score\", \"Median Years of Work Experience\", \"Median Volunteer Level\"]\n\n# Dropdown\nplot.update_layout( \n    updatemenus=[ \n        dict( \n            active = 0, \n            x = -0.1, \n            y = 0.7,\n            buttons=list([ \n                dict(label = variable, \n                     method = \"update\", \n                     args=[{\"visible\": [i == j for i in range(len(variables))]}, \n                           {\"title\": f\"{titles[j]} by Admissions Decision\",  \n                            \"xaxis_title\": \"Admissions Decision\", \n                            \"yaxis_title\": titles[j], \n                            \"xaxis\": {\"categoryorder\": \"array\", \"categoryarray\": order}\n                            }]) for j, variable in enumerate(variables)\n            ]), \n        ) \n    ], \n    title_text = f\"{titles[0]} by Admissions Decision\",\n    xaxis = dict(categoryorder=\"array\", categoryarray=order),\n    showlegend = True,\n    margin = dict(l = 50, r = 50, t = 50, b = 50)\n) \n\nplot.show()"
  },
  {
    "objectID": "index.html#about-the-data",
    "href": "index.html#about-the-data",
    "title": "Intern Insight",
    "section": "About the Data",
    "text": "About the Data\nThe dataset contained summer internship results on 80 students who attend Data Tech College. Features within the data included academic attributes such as the studentâ€™s test score, GPA and writing scores. Holistic features were also included such as volunteer and work experience. Demographic information such as state and gender were also found in the data.\nThe original internship admissions data set contained outliers such as erroneous GPA and demographic values, which were subsequently removed during data preprocessing. All visualizations and results presented below are based on the cleaned data set, which excludes the outlier rows.\nFurther Clarifications:\n\nStudents are applying strictly to data science internships around the United States.\nEach student applied to one internship for the summer of 2023, and each student heard back on whether they were accepted, waitlisted, or declined.\nThe state represents the state in which the intership applied to is located.\nTest scores are referring to Leet Code test scores."
  },
  {
    "objectID": "index.html#leading",
    "href": "index.html#leading",
    "title": "Intern Insight",
    "section": "Leading",
    "text": "Leading\nBefore applying machine learning, below we will explain the reasoning behind applying ML to the student admissions data. We wanted to identify relationships between the academic features in the data on the decision, namely GPA, writing score, and test score. The motivation behind this is to use the information of the relationships, if any are present, to help students in our university understand what features of their application might contribute to the decision. We then hope to provide targeted help to our students based on our findings to increase the number of students admitted to internships.\n\n\nCode\n%%html\n<img src=\"../website/images/decision_pairplot.png\">\n\n\n\n\n\nAbove is the pairplot of GPA, writing score, and test score of the students grouped by the decision. When looking at the scatterplots, we notice some patterns:\n\nStudents with low test score, no matter the GPA, were declined.\nStudents with high test score and high GPA were accepted.\nStudents with a pretty high GPA but average test score were waitlisted.\nStudents with high test score, no matter the writing score, were admitted.\nStudents with a low test score, no matter the writing score, were declined.\nStudents with high writing scores but average test score were waitlisted.\n\nThrough the pairplot we can see that some of the academic features have relationships by decision result, but some features seem to be more important than others. We will investigate the importance of all features on decision using XGBoost and Shapley values.\n\nXGBoost and Shapley\nTo understand the factors that may have played a role in determining college student internship decisions, a tree-based machine learning model, XGBoost, was trained and tested. By analyzing the results of the model using statistical game theory elements called Shapley values, we can also detetermine how strongly each factor influenced internship decisions. Understanding such relationships will highlight opportunities for improvement in the college curriculum to ensure all of the students have the highest probability of being accepted for a summer internship.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.</figcaption>\n</figure>\n\n\n\n    \n    Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.\n\n\n\nThe figure above quantifies studentâ€™s academic and wholistic attributes influence on internship application outcomes overall. Higher SHAP values mean those features have a greater impact internship decisions. Conversely, lower SHAP values indicate factors that are less important in the internship decision making process.\nAs we can see, test scores, GPA, and writing scores are among the top contributors while features such as work experience and volunteer level are not weighed as heaviliy. This highlights that companies are looking to the studentâ€™s academic background as a main focus for their decision compared to their wholistic attributes.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/spec_shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.</figcaption>\n</figure>\n\n\n\n    \n    Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.\n\n\n\nWhile the previous plot displayed how student attributes play a role in the internship decision making process overall, Shapley statistics allow further steps to be taken by analyzing how each feature contributes to each possible deicion (Admit, Waitlist, Decline).\nThe figure above displays just that. It appears that the test score is the most significant factor contributing to a studentâ€™s likelihood of being admitted. It falls in line with the earlier pairplot as we saw significant overlap in internship decisions among GPAs and writing scores, but distinct separation for test scores. This suggests that students with higher test scores have a greater advantage in the competitive internship landscape.\nFor students who are placed on a waitlist, both test scores and GPA are important considerations. This might indicate that students on the waitlist have comparatively lower test scores than those who are admitted outright. The pairplot displays exactly that so it seems that for these students, academic performance is a deciding factor that could tip the balance in their favor for internship admission.\nOn the other hand, for students who are declined, the test score still holds considerable weight, but the writing score becomes notably more influential. This pattern could imply that declined students, while possibly having adequate test scores, may fall short in demonstrating the necessary writing proficiency, which is critical for many internships that require strong communication skills."
  },
  {
    "objectID": "index.html#academics",
    "href": "index.html#academics",
    "title": "Intern Insight",
    "section": "Academics",
    "text": "Academics\nBefore applying machine learning, below we will explain the reasoning behind applying ML to the student admissions data. We wanted to identify relationships between the academic features in the data on the decision, namely GPA, writing score, and test score. The motivation behind this is to use the information of the relationships, if any are present, to help students in our university understand what features of their application might contribute to the decision. We then hope to provide targeted help to our students based on our findings to increase the number of students admitted to internships.\n\n\nCode\n%%html\n<img src=\"../website/images/decision_pairplot.png\">\n\n\n\n\n\nAbove is the pairplot of GPA, writing score, and test score of the students grouped by the decision. When looking at the scatterplots, we notice some patterns:\n\nStudents with low test score, no matter the GPA, were declined.\nStudents with high test score and high GPA were accepted.\nStudents with a pretty high GPA but average test score were waitlisted.\nStudents with high test score, no matter the writing score, were admitted.\nStudents with a low test score, no matter the writing score, were declined.\nStudents with high writing scores but average test score were waitlisted.\n\nThrough the pairplot we can see that some of the academic features have relationships by decision result, but some features seem to be more important than others. We will investigate the importance of all features on decision using XGBoost and Shapley values.\n\nXGBoost and Shapley\nTo understand the factors that may have played a role in determining college student internship decisions, a tree-based machine learning model, XGBoost, was trained and tested. By analyzing the results of the model using statistical game theory elements called Shapley values, we can also detetermine how strongly each factor influenced internship decisions. Understanding such relationships will highlight opportunities for improvement in the college curriculum to ensure all of the students have the highest probability of being accepted for a summer internship.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.</figcaption>\n</figure>\n\n\n\n    \n    Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.\n\n\n\nThe figure above quantifies studentâ€™s academic and wholistic attributes influence on internship application outcomes overall. Higher SHAP values mean those features have a greater impact internship decisions. Conversely, lower SHAP values indicate factors that are less important in the internship decision making process.\nAs we can see, test scores, GPA, and writing scores are among the top contributors while features such as work experience and volunteer level are not weighed as heaviliy. This highlights that companies are looking to the studentâ€™s academic background as a main focus for their decision compared to their wholistic attributes.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/spec_shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.</figcaption>\n</figure>\n\n\n\n    \n    Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.\n\n\n\nWhile the previous plot displayed how student attributes play a role in the internship decision making process overall, Shapley statistics allow further steps to be taken by analyzing how each feature contributes to each possible deicion (Admit, Waitlist, Decline).\nThe figure above displays just that. It appears that the test score is the most significant factor contributing to a studentâ€™s likelihood of being admitted. It falls in line with the earlier pairplot as we saw significant overlap in internship decisions among GPAs and writing scores, but distinct separation for test scores. This suggests that students with higher test scores have a greater advantage in the competitive internship landscape.\nFor students who are placed on a waitlist, both test scores and GPA are important considerations. This might indicate that students on the waitlist have comparatively lower test scores than those who are admitted outright. The pairplot displays exactly that so it seems that for these students, academic performance is a deciding factor that could tip the balance in their favor for internship admission.\nOn the other hand, for students who are declined, the test score still holds considerable weight, but the writing score becomes notably more influential. This pattern could imply that declined students, while possibly having adequate test scores, may fall short in demonstrating the necessary writing proficiency, which is critical for many internships that require strong communication skills."
  },
  {
    "objectID": "index.html#academic-wholistic-insights",
    "href": "index.html#academic-wholistic-insights",
    "title": "Intern Insight",
    "section": "Academic & Wholistic Insights",
    "text": "Academic & Wholistic Insights\nThough the usage of pariplots and machine learning techniques, relationships between studentâ€™s academic features (GPA, writing score, test score) and the internship application outcome can be understood. This information can help students at Data Tech understand what features of their application may contribute to internship decisions and how strongly. Futhremore, this analysis can provide insight into areas the curriculum that may or may not need targeted attention to ensure the students increase their internship admission chances.\n\n\nCode\n%%html\n<img src=\"../website/images/decision_pairplot.png\">\n\n\n\n\n\nAbove is a pairplot of GPA, writing score, and test score of the students grouped by the decision. When looking at the scatterplots, we notice some patterns:\n\nStudents with low test score, no matter the GPA, were declined.\nStudents with high test score and high GPA were accepted.\nStudents with a pretty high GPA but average test score were waitlisted.\nStudents with high test score, no matter the writing score, were admitted.\nStudents with a low test score, no matter the writing score, were declined.\nStudents with high writing scores but average test score were waitlisted.\n\nThrough the pairplot, it is apparent that some of the academic features have relationships by decision result, but some features seem to be more important than others.\nTo understand the factors influencing college student internship decisions, we employed a tree-based machine learning model, specifically XGBoost, to analyze the data. To interpret the modelâ€™s predictions and assess the impact of each factor, we utilized Shapley values, a concept from cooperative game theory. This analysis enables us to identify which factors most strongly influence internship decisions. Gaining insights into these relationships will help us pinpoint areas for improvement in the college curriculum, ensuring that students are well-prepared and have the highest likelihood of securing summer internships.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.</figcaption>\n</figure>\n\n\n\n    \n    Figure 1: Visualization of SHAP values indicating the overall impact of various features on internship decisions.\n\n\n\nThe figure above quantifies studentâ€™s academic and wholistic attributes influence on internship application outcomes overall. Higher SHAP values mean those features have a greater impact internship decisions. Conversely, lower SHAP values indicate factors that are less important in the internship decision making process.\nAs we can see, test scores, GPA, and writing scores are among the top contributors while features such as work experience and volunteer level are not weighed as heaviliy. This highlights that companies are looking to the studentâ€™s academic background as a main focus for their decision compared to their wholistic attributes.\n\n\nCode\n%%html\n<figure>\n    <img src=\"../website/images/spec_shap.png\"  style=\"display: block; margin-left: auto; margin-right: auto;\">\n    <figcaption style=\"text-align: center;\">Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.</figcaption>\n</figure>\n\n\n\n    \n    Figure 2: Visualization of SHAP values indicating the impact of various features on internship application outcomes by decision.\n\n\n\nWhile the previous plot displayed how student attributes play a role in the internship decision making process overall, Shapley statistics allow further steps to be taken by analyzing how each feature contributes to each possible deicion (Admit, Waitlist, Decline).\nThe figure above displays just that. It appears that the test score is the most significant factor contributing to a studentâ€™s likelihood of being admitted. It falls in line with the earlier pairplot as we saw significant overlap in internship decisions among GPAs and writing scores, but distinct separation for test scores. This suggests that students with higher test scores have a greater advantage in the competitive internship landscape.\nFor students who are placed on a waitlist, both test scores and GPA are important considerations. This might indicate that students on the waitlist have comparatively lower test scores than those who are admitted outright. The pairplot displays exactly that so it seems that for these students, academic performance is a deciding factor that could tip the balance in their favor for internship admission.\nOn the other hand, for students who are declined, the test score still holds considerable weight, but the writing score becomes notably more influential. This pattern could imply that declined students, while possibly having adequate test scores, may fall short in demonstrating the necessary writing proficiency, which is critical for many internships that require strong communication skills."
  },
  {
    "objectID": "index.html#academic-holistic-insights",
    "href": "index.html#academic-holistic-insights",
    "title": "Intern Insight",
    "section": "Academic & Holistic Insights",
    "text": "Academic & Holistic Insights\nThough the usage of pariplots and machine learning techniques, relationships between studentâ€™s academic features (GPA, writing score, test score) and the internship application outcome can be understood. This information can help students at Data Tech understand what features of their application may contribute to internship decisions and how strongly. Futhremore, this analysis can provide insight into areas the curriculum that may or may not need targeted attention to ensure the students increase their internship admission chances.\n\n\nCode\n%%html\n<img src=\"../website/images/decision_pairplot.png\">\n\n\n\n\n\nAbove is a pairplot of GPA, writing score, and test score of the students grouped by the decision. When looking at the scatterplots, we notice some patterns:\n\nStudents with low test score, no matter the GPA, were declined.\nStudents with high test score and high GPA were accepted.\nStudents with a pretty high GPA but average test score were waitlisted.\nStudents with high test score, no matter the writing score, were admitted.\nStudents with a low test score, no matter the writing score, were declined.\nStudents with high writing scores but average test score were waitlisted.\n\nThrough the pairplot, it is apparent that some of the academic features have relationships by decision result, but some features seem to be more important than others.\nTo understand the factors influencing college student internship decisions, we employed a tree-based machine learning model, specifically XGBoost, to analyze the data. To interpret the modelâ€™s predictions and assess the impact of each factor, we utilized Shapley values, a concept from cooperative game theory. This analysis enables us to identify which factors most strongly influence internship decisions. Gaining insights into these relationships will help us pinpoint areas for improvement in the college curriculum, ensuring that students are well-prepared and have the highest likelihood of securing summer internships.\n\nThe figure above quantifies studentâ€™s academic and holistic attributes influence on internship application outcomes overall. Higher SHAP values mean those features have a greater impact internship decisions. Conversely, lower SHAP values indicate factors that are less important in the internship decision making process.\nAs we can see, test scores, GPA, and writing scores are among the top contributors while features such as work experience and volunteer level are not weighed as heaviliy. This highlights that companies are looking to the studentâ€™s academic background as a main focus for their decision compared to their holistic attributes.\n\nWhile the previous plot displayed how student attributes play a role in the internship decision making process overall, Shapley statistics allow further steps to be taken by analyzing how each feature contributes to each possible deicion (Admit, Waitlist, Decline).\nThe figure above displays just that. It appears that the test score is the most significant factor contributing to a studentâ€™s likelihood of being admitted. It falls in line with the earlier pairplot as we saw significant overlap in internship decisions among GPAs and writing scores, but distinct separation for test scores. This suggests that students with higher test scores have a greater advantage in the competitive internship landscape.\nFor students who are placed on a waitlist, both test scores and GPA are important considerations. This might indicate that students on the waitlist have comparatively lower test scores than those who are admitted outright. The pairplot displays exactly that so it seems that for these students, academic performance is a deciding factor that could tip the balance in their favor for internship admission.\nOn the other hand, for students who are declined, the test score still holds considerable weight, but the writing score becomes notably more influential. This pattern could imply that declined students, while possibly having adequate test scores, may fall short in demonstrating the necessary writing proficiency, which is critical for many internships that require strong communication skills."
  }
]